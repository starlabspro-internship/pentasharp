@using pentasharp.Models.Entities
@using pentasharp.ViewModel.TaxiReservation



@{
    ViewData["Title"] = "Taxi Reservations";
}

<div class="container my-5">
    <h1 class="text-center mb-4 fw-bold text-primary">Taxi Reservations</h1>

    <div id="searchFormContainer" class="row justify-content-center mb-5">
        <div class="col-md-8">
            <form id="searchForm" class="bg-light p-4 rounded shadow-sm" onsubmit="handleSearch(event)">
                <div class="row mb-3">
                    <div class="col-md-6 form-group">
                        <label for="pickupLocation" class="form-label">Pickup Location</label>
                        <input type="text" class="form-control" id="pickupLocation" name="PickupLocation" placeholder="Enter Pickup Location" required>
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="dropoffLocation" class="form-label">Dropoff Location</label>
                        <input type="text" class="form-control" id="dropoffLocation" name="DropoffLocation" placeholder="Enter Dropoff Location" required>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6 form-group">
                        <label for="reservationTime" class="form-label">Reservation Time</label>
                        <input type="time" class="form-control" id="reservationTime" name="ReservationTime" required>
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="reservationDate" class="form-label">Reservation Date</label>
                        <input type="date" class="form-control" id="reservationDate" name="ReservationDate" required>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6 form-group">
                        <label for="passengerCount" class="form-label">Number of Passengers</label>
                        <input type="number" class="form-control" id="passengerCount" name="PassengerCount" placeholder="Enter Number of Passengers" min="1" required>
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary btn-lg rounded-pill px-5 py-2 shadow-sm">Search</button>
                </div>
            </form>
        </div>
    </div>

    <div id="resultsContainer" class="container"></div>

    <div class="modal fade" id="reservationModal" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reservationModalLabel">Confirm Your Booking</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Pickup Location:</strong> <span id="modalPickupLocation"></span></p>
                    <p><strong>Dropoff Location:</strong> <span id="modalDropoffLocation"></span></p>
                    <p><strong>Reservation Date:</strong> <span id="modalReservationDate"></span></p>
                    <p><strong>Reservation Time:</strong> <span id="modalReservationTime"></span></p>
                    <p><strong>Number of Passengers:</strong> <span id="modalPassengerCount"></span></p>
                    <p><strong>Taxi License Plate:</strong> <span id="modalTaxiLicensePlate"></span></p>
                    <p><strong>Taxi Id:</strong> <span id="modalTaxiTaxiId"></span></p>
                    <p><strong>Taxi Company:</strong> <span id="modalTaxiTaxiCompanyCompanyName"></span></p>
                    <div class="alert alert-info mt-3" id="confirmationMessage" style="display: none;">
                        * You will be notified with the price and confirmation status.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="confirmButton" onclick="confirmReservation()">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3 text-center">
            @TempData["SuccessMessage"]
        </div>
    }
</div>

<script>
    fetch('http://localhost:5053/IncomingTaxiReservation/Search', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            PickupLocation: pickupLocation,
            DropoffLocation: dropoffLocation,
            ReservationTime: reservationTime,
            ReservationDate: reservationDate,
            PassengerCount: passengerCount
        }),
    })
        .then(response => response.json())
        .then(data => {
            const resultsContainer = document.getElementById('resultsContainer');
            resultsContainer.innerHTML = '';
            data.forEach(taxiCompany => {
                const resultCard = `
                <div class="container my-3" style="max-width: 600px;">
                    <div class="card shadow-sm border-0 p-4 rounded-4">
                        <div class="row align-items-center">
                            <div class="col-4 d-flex align-items-center justify-content-center">
                                <i class="fas fa-taxi fa-3x text-warning"></i>
                            </div>
                            <div class="col-5">
                                <h5 class="fw-bold">Taxi ${taxiCompany.companyName}</h5>
                                <h5 class="fw-bold">Taxi ${taxiCompany.taxi}</h5>
                                <p class="text-muted">Reliable and comfortable</p>
                            </div>
                            <div class="col-3 text-end">
                                <button class="btn btn-primary rounded-pill px-4 py-2 shadow" onclick="openReservationModal('${pickupLocation}', '${dropoffLocation}', '${reservationDate}', '${reservationTime}', '${passengerCount}', '${taxiCompany.CompanyName}', '${taxiCompany.Taxi}','${taxiCompany.ContactInfo}')">Reserve Now</button>
                            </div>
                        </div>
                    </div>
                </div>`;
                resultsContainer.insertAdjacentHTML('beforeend', resultCard);
            });
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while searching for taxis. Please try again.');
        });

    function openReservationModal(pickupLocation, dropoffLocation, reservationDate, reservationTime, passengerCount, taxiLicensePlate, taxiTaxiId, taxiCompanyName) {
        document.getElementById('modalPickupLocation').textContent = pickupLocation;
        document.getElementById('modalDropoffLocation').textContent = dropoffLocation;
        document.getElementById('modalReservationDate').textContent = reservationDate;
        document.getElementById('modalReservationTime').textContent = reservationTime;
        document.getElementById('modalPassengerCount').textContent = passengerCount;
        document.getElementById('modalTaxiLicensePlate').textContent = taxiLicensePlate;
        document.getElementById('modalTaxiTaxiId').textContent = taxiTaxiId;
        document.getElementById('modalTaxiTaxiCompanyCompanyName').textContent = taxiCompanyName;


        window.selectedTaxiId = taxiTaxiId;
        document.getElementById('confirmationMessage').style.display = 'none';
        document.getElementById('confirmButton').style.display = 'inline-block';

        const reservationModal = new bootstrap.Modal(document.getElementById('reservationModal'));
        reservationModal.show();
    }

    function confirmReservation() {
        document.getElementById('confirmationMessage').style.display = 'block';
        document.getElementById('confirmButton').style.display = 'none';

        const pickupLocation = document.getElementById('modalPickupLocation').textContent;
        const dropoffLocation = document.getElementById('modalDropoffLocation').textContent;
        const reservationDate = document.getElementById('modalReservationDate').textContent;
        const reservationTime = document.getElementById('modalReservationTime').textContent;
        const passengerCount = document.getElementById('modalPassengerCount').textContent;
        const taxiLicensePlate = document.getElementById('modalTaxiLicensePlate').textContent;
        const taxiCompany = document.getElementById('modalTaxiTaxiCompanyCompanyName').textContent;
        const taxiId = document.getElementById('modalTaxiTaxiId').textContent; // Assuming you have a taxi ID
        const tripStartTime = new Date(`${reservationDate}T${reservationTime}Z`); // Add 'Z' for UTC
        // Prepare the data to send to the server

        const reservationData = {
            PickupLocation: pickupLocation,
            DropoffLocation: dropoffLocation,
            TripStartTime: tripStartTime.toISOString(),
            TaxiId: window.selectedTaxiId,
            TaxiCompany: "",
            PassengerCount: passengerCount, // Use taxiId to identify the taxi in your database
            Taxis: []
        };
        reservationData.Taxis.push({ TaxiId: window.selectedTaxiId, LicensePlate: document.getElementById('modalTaxiLicensePlate').textContent });
        console.log("Sending reservation data:", reservationData);
        // Send the reservation data to the server
        fetch('http://localhost:5053/IncomingTaxiReservation/TaxiReservations', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(reservationData),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Handle success (e.g., redirect or show a success message)
                console.log(data);
                // Redirect to confirmation page or show a success message
                window.location.href = '/Confirmation/' + data.reservationId; // Adjust this based on your routing
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while confirming the reservation. Please try again.');
            });
    }
</script>


<style>
    body {
        background-color: #f4f7fa;
        font-family: Arial, sans-serif;
        color: #343a40;
    }

    h1 {
        font-size: 2.5rem;
        color: #007bff;
        font-weight: 700;
    }

    .card {
        border-radius: 10px;
        transition: box-shadow 0.3s;
    }

        .card:hover {
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

    .btn-primary {
        background-color: #007bff;
        border: none;
        font-weight: 600;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
            box-shadow: 0px 4px 10px rgba(0, 91, 187, 0.2);
        }

    .btn-dark {
        background-color: #343a40;
        border-color: #343a40;
    }

        .btn-dark:hover {
            background-color: #1d1e22;
        }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>