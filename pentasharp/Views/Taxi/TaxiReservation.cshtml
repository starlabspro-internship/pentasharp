@using pentasharp.Models.Entities
@using pentasharp.ViewModel.TaxiReservation

@{
    ViewData["Title"] = "Taxi Reservations";
}

<div class="container my-5">
    <h1 class="text-center mb-4 fw-bold text-primary">Taxi Reservations</h1>

    <div id="searchFormContainer" class="row justify-content-center mb-5">
        <div class="col-md-8">
            <form id="searchForm" class="bg-light p-4 rounded shadow-sm" onsubmit="handleSearch(event)">
                <div class="row mb-3">
                    <div class="col-md-6 form-group">
                        <label for="pickupLocation" class="form-label">Pickup Location</label>
                        <input type="text" class="form-control" id="pickupLocation" name="PickupLocation" placeholder="Enter Pickup Location" required>
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="dropoffLocation" class="form-label">Dropoff Location</label>
                        <input type="text" class="form-control" id="dropoffLocation" name="DropoffLocation" placeholder="Enter Dropoff Location" required>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6 form-group">
                        <label for="reservationTime" class="form-label">Reservation Time</label>
                        <input type="time" class="form-control" id="reservationTime" name="ReservationTime" required>
                    </div>
                    <div class="col-md-6 form-group">
                        <label for="reservationDate" class="form-label">Reservation Date</label>
                        <input type="date" class="form-control" id="reservationDate" name="ReservationDate" required>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6 form-group">
                        <label for="passengerCount" class="form-label">Number of Passengers</label>
                        <input type="number" class="form-control" id="passengerCount" name="PassengerCount" placeholder="Enter Number of Passengers" min="1" required>
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary btn-lg rounded-pill px-5 py-2 shadow-sm">Search</button>
                </div>
            </form>
        </div>
    </div>

    <div id="resultsContainer" class="container"></div>

    <div class="modal fade" id="reservationModal" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reservationModalLabel">Confirm Your Booking</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Pickup Location:</strong> <span id="modalPickupLocation"></span></p>
                    <p><strong>Dropoff Location:</strong> <span id="modalDropoffLocation"></span></p>
                    <p><strong>Reservation Date:</strong> <span id="modalReservationDate"></span></p>
                    <p><strong>Reservation Time:</strong> <span id="modalReservationTime"></span></p>
                    <p><strong>Passenger Count:</strong> <span id="modalPassengerCount"></span></p>
                    <p><strong>Company  Name:</strong> <span id="modalCompanyName"></span></p>
                    <p><strong>Passenger Count:</strong> <span id="modalContactInfo"></span></p>
                    <div class="alert alert-info mt-3" id="confirmationMessage" style="display: none;">
                        * You will be notified with the price and confirmation status.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="confirmButton" onclick="confirmReservation()">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3 text-center">
            @TempData["SuccessMessage"]
        </div>
    }
</div>

<script>
    function handleSearch(event) {
        event.preventDefault(); // Prevent form submission

        const pickupLocation = document.getElementById('pickupLocation').value;
        const dropoffLocation = document.getElementById('dropoffLocation').value;
        const reservationTime = document.getElementById('reservationTime').value;
        const reservationDate = document.getElementById('reservationDate').value;
        const passengerCount = document.getElementById('passengerCount').value;

        fetch('http://localhost:5053/IncomingTaxiReservation/Search', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                PickupLocation: pickupLocation,
                DropoffLocation: dropoffLocation,
                ReservationTime: reservationTime,
                ReservationDate: reservationDate,
                PassengerCount: passengerCount
            }),
        })
            .then(response => {
                console.log('Response Status:', response.status); // Check the response status
                return response.json();
            })
            .then(data => {
                console.log('API Response:', data); // Log the response data
                if (data && Array.isArray(data)) {
                    const resultsContainer = document.getElementById('resultsContainer');
                    resultsContainer.innerHTML = '';  // Clear any previous results

                    data.forEach(taxiCompany => {
                        console.log('Taxi Company Name:', taxiCompany.companyName);
                        console.log('Taxi Company Contact Info:', taxiCompany.contactInfo);

                        const resultCard = `
                        <div class="container my-3" style="max-width: 600px;">
                            <div class="card shadow-sm border-0 p-4 rounded-4">
                                <div class="row align-items-center">
                                    <div class="col-4 d-flex align-items-center justify-content-center">
                                        <i class="fas fa-taxi fa-3x text-warning"></i>
                                    </div>
                                    <div class="col-5">
                                        <h5 class="fw-bold">Taxi: ${taxiCompany.companyName}</h5>
                                        <h5 class="fw-bold">Contact: ${taxiCompany.contactInfo}</h5>
                                        <p class="text-muted">Reliable and comfortable</p>
                                    </div>
                                    <div class="col-3 text-end">
                                        <button class="btn btn-primary rounded-pill px-4 py-2 shadow"
                                                onclick="openReservationModal('${pickupLocation}', '${dropoffLocation}', '${reservationDate}', '${reservationTime}', '${passengerCount}', '${taxiCompany.companyName}', '${taxiCompany.contactInfo}', ${taxiCompany.taxiCompanyId})">
                                            Reserve Now
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                        resultsContainer.insertAdjacentHTML('beforeend', resultCard);
                    });
                } else {
                    console.error('Received data is not an array:', data);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while searching for taxis. Please try again.');
            });
    }

    function openReservationModal(pickupLocation, dropoffLocation, reservationDate, reservationTime, passengerCount,companyName,contactInfo, taxiCompanyId) {
        document.getElementById('modalPickupLocation').textContent = pickupLocation;
        document.getElementById('modalDropoffLocation').textContent = dropoffLocation;
        document.getElementById('modalReservationDate').textContent = reservationDate;
        document.getElementById('modalReservationTime').textContent = reservationTime;
        document.getElementById('modalPassengerCount').textContent = passengerCount;
        document.getElementById('modalCompanyName').textContent = taxiCompany.companyName;
        document.getElementById('modalContactInfo').textContent = taxiCompany.contactInfo;

        // Store the selected taxiId for reservation confirmation
        window.selectedTaxiCompanyId = taxiCompanyId;

        document.getElementById('confirmationMessage').style.display = 'none';
        document.getElementById('confirmButton').style.display = 'inline-block';

        const reservationModal = new bootstrap.Modal(document.getElementById('reservationModal'));
        reservationModal.show();
    }

    function confirmReservation() {
        document.getElementById('confirmationMessage').style.display = 'block';
        document.getElementById('confirmButton').style.display = 'none';

        const pickupLocation = document.getElementById('modalPickupLocation').textContent;
        const dropoffLocation = document.getElementById('modalDropoffLocation').textContent;
        const reservationDate = document.getElementById('modalReservationDate').textContent;
        const reservationTime = document.getElementById('modalReservationTime').textContent;
        const passengerCount = document.getElementById('modalPassengerCount').textContent;

        const tripStartTime = new Date(`${reservationDate}T${reservationTime}:00Z`);

        const reservationData = {
            PickupLocation: pickupLocation,
            DropoffLocation: dropoffLocation,
            TripStartTime: tripStartTime,
            PassengerCount: passengerCount,
            TaxiCompanyId: window.selectedTaxiCompanyId
        };

        fetch('http://localhost:5053/IncomingTaxiReservation/ConfirmReservation', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(reservationData),
        })
            .then(response => response.json())
            .then(data => {
                alert(data.message); // Assuming the API returns a message
                window.location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while confirming your reservation.');
            });
    }
</script>